                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.1 #14650 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module gb_math
                                      6 	.optsdcc -msm83
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _multiplication
                                     12 	.globl _calculateIndex
                                     13 ;--------------------------------------------------------
                                     14 ; special function registers
                                     15 ;--------------------------------------------------------
                                     16 ;--------------------------------------------------------
                                     17 ; ram data
                                     18 ;--------------------------------------------------------
                                     19 	.area _DATA
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area _INITIALIZED
                                     24 ;--------------------------------------------------------
                                     25 ; absolute external ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area _DABS (ABS)
                                     28 ;--------------------------------------------------------
                                     29 ; global & static initialisations
                                     30 ;--------------------------------------------------------
                                     31 	.area _HOME
                                     32 	.area _GSINIT
                                     33 	.area _GSFINAL
                                     34 	.area _GSINIT
                                     35 ;--------------------------------------------------------
                                     36 ; Home
                                     37 ;--------------------------------------------------------
                                     38 	.area _HOME
                                     39 	.area _HOME
                                     40 ;--------------------------------------------------------
                                     41 ; code
                                     42 ;--------------------------------------------------------
                                     43 	.area _CODE
                                     44 ;src/my_libs/gb_math.c:4: uint8_t multiplication(uint8_t a, uint8_t b){
                                     45 ;	---------------------------------
                                     46 ; Function multiplication
                                     47 ; ---------------------------------
    00000000                         48 _multiplication::
    00000000 6F               [ 4]   49 	ld	l, a
                                     50 ;	spillPairReg hl
                                     51 ;	spillPairReg hl
                                     52 ;src/my_libs/gb_math.c:5: uint8_t original_value = a;
    00000001 4D               [ 4]   53 	ld	c, l
                                     54 ;src/my_libs/gb_math.c:6: for (uint8_t i = 0; i < b; i++){
    00000002 06 00            [ 8]   55 	ld	b, #0x00
    00000004                         56 00105$:
    00000004 78               [ 4]   57 	ld	a, b
    00000005 93               [ 4]   58 	sub	a, e
    00000006 3E 00            [ 8]   59 	ld	a, #0x00
    00000008 17               [ 4]   60 	rla
    00000009 57               [ 4]   61 	ld	d, a
    0000000A B7               [ 4]   62 	or	a, a
    0000000B 28 08            [12]   63 	jr	Z, 00103$
                                     64 ;src/my_libs/gb_math.c:7: a += original_value;
    0000000D 09               [ 8]   65 	add	hl, bc
                                     66 ;src/my_libs/gb_math.c:8: if (i < b){break;}
    0000000E 7A               [ 4]   67 	ld	a, d
    0000000F B7               [ 4]   68 	or	a, a
    00000010 20 03            [12]   69 	jr	NZ, 00103$
                                     70 ;src/my_libs/gb_math.c:6: for (uint8_t i = 0; i < b; i++){
    00000012 04               [ 4]   71 	inc	b
    00000013 18 EF            [12]   72 	jr	00105$
    00000015                         73 00103$:
                                     74 ;src/my_libs/gb_math.c:10: return a;
    00000015 7D               [ 4]   75 	ld	a, l
                                     76 ;src/my_libs/gb_math.c:11: }
    00000016 C9               [16]   77 	ret
                                     78 ;src/my_libs/gb_math.c:16: uint8_t calculateIndex(uint8_t x, uint8_t y, uint8_t size){
                                     79 ;	---------------------------------
                                     80 ; Function calculateIndex
                                     81 ; ---------------------------------
    00000017                         82 _calculateIndex::
    00000017 4F               [ 4]   83 	ld	c, a
    00000018 43               [ 4]   84 	ld	b, e
                                     85 ;src/my_libs/gb_math.c:17: return (multiplication(y, size) + x);
    00000019 C5               [16]   86 	push	bc
    0000001A F8 04            [12]   87 	ldhl	sp,	#4
    0000001C 5E               [ 8]   88 	ld	e, (hl)
    0000001D 78               [ 4]   89 	ld	a, b
    0000001E CDr00r00         [24]   90 	call	_multiplication
    00000021 C1               [12]   91 	pop	bc
    00000022 81               [ 4]   92 	add	a, c
                                     93 ;src/my_libs/gb_math.c:18: }
    00000023 E1               [12]   94 	pop	hl
    00000024 33               [ 8]   95 	inc	sp
    00000025 E9               [ 4]   96 	jp	(hl)
                                     97 	.area _CODE
                                     98 	.area _INITIALIZER
                                     99 	.area _CABS (ABS)
